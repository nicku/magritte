---
- name: Configure Jenkins
  hosts: jenkins

  vars:
    java_packages:
      - openjdk-8-jdk
    solita_jenkins_plugins:
      - git
      - copyartifact
      - build-pipeline-plugin
      - delivery-pipeline-plugin
      - build-name-setter
      - cloudbees-folder
    remote_pipeline_root_dir: "/var/lib/jenkins/pipelines"
    remote_pipeline_dir: "{{ remote_pipeline_root_dir }}/{{ lookup('file', playbook_dir + '/.pipeline-template/project-name/') }}"

  pre_tasks:
    - name: Add OpenJDK PPA (for Java 8)
      apt_repository: repo="ppa:openjdk-r/ppa"

  roles:
    - solita.jenkins

  tasks:
    - name: Install Python development tools (for Ansible)
      apt: name={{ item }} state=installed
      with_items:
        - python-pip
        - python-dev
      tags: ansible

    - name: Install Ansible
      pip: name=ansible version=2.0.0.2
      tags: ansible

    - name: Create Ansible configuration directory
      file:
        path: /etc/ansible
        state: directory
      tags: ansible

    - name: Copy requirements.yml
      copy:
        src: requirements.yml
        dest: /etc/ansible/requirements.yml
      register: requirements_yml
      tags: ansible

    - name: Remove old Ansible plugins
      file:
        path: /etc/ansible/roles
        state: absent
      when: requirements_yml | changed
      tags: ansible

    - name: Install Ansible plugins
      shell: ansible-galaxy install -r /etc/ansible/requirements.yml
      when: requirements_yml | changed
      tags: ansible

    - name: Install Git
      apt: name=git state=installed

    - name: Configure Git for Jenkins
      become: yes
      become_user: jenkins
      command: "git config --global '{{ item.k }}' '{{ item.v }}'"
      with_items:
        - { k: user.name, v: Jenkins }
        - { k: user.email, v: jenkins@example.com }

    - name: Install Maven
      apt: name=maven state=installed

    - name: Generate SSH key for Jenkins
      user: name=jenkins generate_ssh_key=yes

    - name: Fetch Jenkins' public key
      fetch:
        src: /var/lib/jenkins/.ssh/id_rsa.pub
        dest: jenkins_id_rsa.pub
        flat: yes

- hosts: jenkins_root_access
  tasks:
    - name: Give Jenkins root access to other hosts
      authorized_key: "user=root key='{{ item }}'"
      with_file:
        - jenkins_id_rsa.pub
